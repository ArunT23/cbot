#specifying it's use for Germany40

using cAlgo.API;
using cAlgo.API.Indicators;
using System;
using System.Collections.Generic;

namespace cAlgo
{
    [Robot(TimeZone = TimeZones.UTC, AccessRights = AccessRights.None)]
    public class ScalpingBot : Robot
    {
        private ExponentialMovingAverage ema21;
        private ExponentialMovingAverage ema50;
        private ExponentialMovingAverage ema144;
        private RelativeStrengthIndex rsi;

        private List<double> ema21Values = new List<double>();
        private List<double> ema50Values = new List<double>();
        private List<double> ema144Values = new List<double>();
        private List<double> rsiValues = new List<double>();

        protected override void OnStart()
        {
            ema21 = Indicators.ExponentialMovingAverage(Bars.ClosePrices, 21);
            ema50 = Indicators.ExponentialMovingAverage(Bars.ClosePrices, 50);
            ema144 = Indicators.ExponentialMovingAverage(Bars.ClosePrices, 144);
            rsi = Indicators.RelativeStrengthIndex(Bars.ClosePrices, 14);
        }

        protected override void OnBar()
        {
            var currentBarOpenTime = Bars.OpenTimes.Last(0);

            if (IsLondonSession(currentBarOpenTime) && IsRestrictedTime(currentBarOpenTime))
            {
                // Update indicator values
                ema21Values.Add(ema21.Result.LastValue);
                ema50Values.Add(ema50.Result.LastValue);
                ema144Values.Add(ema144.Result.LastValue);
                rsiValues.Add(rsi.Result.LastValue);

                if (CrossedAbove(ema21Values, ema50Values, ema144Values, ema21Values.Count - 1) &&
                    CrossedAbove(ema50Values, ema21Values, ema144Values, ema50Values.Count - 1))
                {
                    if (rsiValues[rsiValues.Count - 2] > 70 && rsiValues[rsiValues.Count - 1] < 70)
                    {
                        // Enter long trade
                        var volume = Symbol.NormalizeVolumeInUnits(1);
                        var stopLoss = Symbol.Bid - Symbol.PipSize * 0.0025;
                        var takeProfit = Symbol.Bid + (Symbol.Bid - stopLoss) * 2;
                        var result = ExecuteMarketOrder(TradeType.Buy, Symbol, volume, "Long Trade", null, stopLoss, takeProfit);
                        if (result.IsSuccessful)
                            ModifyPosition(result.Position, Symbol.Bid, stopLoss);
                    }
                }
                else if (CrossedBelow(ema21Values, ema50Values, ema144Values, ema21Values.Count - 1) &&
                    CrossedBelow(ema50Values, ema21Values, ema144Values, ema50Values.Count - 1))
                {
                    if (rsiValues[rsiValues.Count - 2] < 30 && rsiValues[rsiValues.Count - 1] > 30)
                    {
                        // Enter short trade
                        var volume = Symbol.NormalizeVolumeInUnits(1);
                        var stopLoss = Symbol.Ask + Symbol.PipSize * 0.0025;
                        var takeProfit = Symbol.Ask - (stopLoss - Symbol.Ask) * 2;
                        var result =
